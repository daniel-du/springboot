group 'com.daniel.test'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven{
//        url 'http://maven.aliyun.com/nexus/content/groups/public/'
        url 'http://192.168.1.110:8081/nexus/content/groups/public/'
    }
}

//    配置依赖包版本
ext{
    springBootVersion = '1.5.3.RELEASE'
}

dependencies{
    compile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBootVersion],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: springBootVersion],
            [group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion],
            // 数据库连接
            [group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.1.1'],
            [group: 'mysql', name: 'mysql-connector-java', version: '5.1.30'],
//            [group: 'com.alibaba', name: 'druid', version: '1.0.18'],
            [group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.3'],
            // 第三方引用
            [group: 'com.github.pagehelper', name: 'pagehelper', version: '4.0.0'],
            [group: 'joda-time', name: 'joda-time', version: '2.9'],
            [group: 'com.alibaba', name: 'fastjson', version: '1.2.7'],
            [group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'],
            [group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'],
            [group: 'commons-io', name: 'commons-io', version: '2.4'],
            [group: 'commons-codec', name: 'commons-codec', version: '1.10'],
            [group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.2'],
    )
    testCompile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion]
    )
}
// jar 打包测试---测试结果失败
//jar{
//    manifest{
//        attributes 'Main-Class' : 'com.daniel.test.springboot.SpringBootTestApplication'
//    }
//}
//jar {
//    String classPath = ''
//    configurations.runtime.each {classPath = classPath + " lib\\"+it.name}
//    manifest {
//        attributes 'Main-Class': 'com.daniel.test.springboot.SpringBootTestApplication'
//        attributes 'Class-Path': classPath
//    }
//}

// 项目依赖包拷贝
task copyDependency(type : Copy){
    from configurations.compile
    into "$buildDir/output/dependency"
}
def copyMainClass = copySpec{
    from ("$buildDir/classes/main")
    into "classes"
}
def  copyAllLib = copySpec{
    from ("$buildDir/output/dependency")
    into "lib"
}
def  copyConf = copySpec{
    from (sourceSets.main.resources.srcDirs){
        include "*.conf"
        include "*.xml"
        include "*.txt"
        include "templates/**"
        include "*.properties"
    }
    into "conf"
}
def  copyBin = copySpec{
    from("package"){
        include "bin/*.sh"
    }
}
// 打包
task zipProject(type:Zip, dependsOn : [jar, copyDependency] ){
    with copyAllLib
    with copyMainClass
    with copyConf
    with copyBin
    into "springboot"
    destinationDir = file("zip")
}
task copyDockerfile(type : Copy){
    from("package/docker"){
        include "Dockerfile"
    }
    into "zip"
}